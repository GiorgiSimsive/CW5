services:
  db:
    image: postgres:16
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${NAME}
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USER:-postgres} -d ${NAME:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5


  backend:
    image: ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG:-latest}
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["bash", "docker/entrypoint/backend-entrypoint.sh"]
    volumes:
      - django_static:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"

  celery_worker:
    image: ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG:-latest}
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    command: ["bash", "docker/entrypoint/celery-worker-entrypoint.sh"]

  celery_beat:
    image: ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG:-latest}
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    command: ["bash", "docker/entrypoint/celery-beat-entrypoint.sh"]

  nginx:
    image: nginx:1.27-alpine
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - django_static:/usr/share/nginx/html/static:ro
      - media_volume:/usr/share/nginx/html/media:ro
    ports:
      - "80:80"

volumes:
  postgres_data:
  redis_data:
  django_static:
  media_volume:
